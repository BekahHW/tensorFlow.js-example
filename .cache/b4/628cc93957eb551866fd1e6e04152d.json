{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js","dependencies":[{"name":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js.map","includedInParent":true,"mtime":1629319051722},{"name":"/Users/bekah/Projects/tensorFlow.js-example/package.json","includedInParent":true,"mtime":1629733561834},{"name":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1629319051722},{"name":"../../engine","loc":{"line":17,"column":23},"parent":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js","resolved":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../../kernel_names","loc":{"line":18,"column":39},"parent":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js","resolved":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../../tensor_util_env","loc":{"line":19,"column":32},"parent":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js","resolved":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../operation","loc":{"line":20,"column":19},"parent":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/string/string_to_hash_bucket_fast.js","resolved":"/Users/bekah/Projects/tensorFlow.js-example/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringToHashBucketFast = void 0;\n\nvar _engine = require(\"../../engine\");\n\nvar _kernel_names = require(\"../../kernel_names\");\n\nvar _tensor_util_env = require(\"../../tensor_util_env\");\n\nvar _operation = require(\"../operation\");\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Converts each string in the input Tensor to its hash mod by a number of\n * buckets.\n *\n * The hash function is deterministic on the content of the string within the\n * process and will never change. However, it is not suitable for cryptography.\n * This function may be used when CPU time is scarce and inputs are trusted or\n * unimportant. There is a risk of adversaries constructing inputs that all hash\n * to the same bucket.\n *\n * ```js\n * const result = tf.string.stringToHashBucketFast(\n *   ['Hello', 'TensorFlow', '2.x'], 3);\n * result.print(); // [0, 2, 2]\n * ```\n * @param input: The strings to assign a hash bucket.\n * @param numBuckets: The number of buckets.\n * @return A Tensor of the same shape as the input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringToHashBucketFast_(input, numBuckets) {\n  const $input = (0, _tensor_util_env.convertToTensor)(input, 'input', 'stringToHashBucketFast', 'string');\n  const attrs = {\n    numBuckets\n  };\n\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const inputs = {\n    input: $input\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.StringToHashBucketFast, inputs, attrs);\n}\n\nconst stringToHashBucketFast = (0, _operation.op)({\n  stringToHashBucketFast_\n});\nexports.stringToHashBucketFast = stringToHashBucketFast;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":54,"column":9}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":54,"column":32}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":54,"column":33}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":54,"column":38}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":54,"column":40}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":54,"column":50}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":47,"column":48},"generated":{"line":54,"column":52}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":55,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":55,"column":8}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":55,"column":14}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":55,"column":17}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":22},"generated":{"line":55,"column":55}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":55,"column":60}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":29},"generated":{"line":55,"column":62}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":55,"column":69}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":38},"generated":{"line":55,"column":71}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":55,"column":95}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":64},"generated":{"line":55,"column":97}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":55,"column":105}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":55,"column":106}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":56,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":56,"column":8}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":13},"generated":{"line":56,"column":13}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":45},"generated":{"line":56,"column":16}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":46},"generated":{"line":57,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":46},"generated":{"line":57,"column":4}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":45},"generated":{"line":58,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":58,"column":3}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":60,"column":6}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":60,"column":16}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":20},"generated":{"line":60,"column":20}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":21}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":60,"column":23}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":61,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":61,"column":10}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":61,"column":14}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":61,"column":19}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":20},"generated":{"line":61,"column":20}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":61,"column":58}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":61,"column":59}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":54,"column":3},"generated":{"line":62,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":64,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":64,"column":8}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":14},"generated":{"line":64,"column":14}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":47},"generated":{"line":64,"column":17}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":48},"generated":{"line":65,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":48},"generated":{"line":65,"column":4}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":53},"generated":{"line":65,"column":9}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":55},"generated":{"line":65,"column":11}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":47},"generated":{"line":66,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":66,"column":3}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":67,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":67,"column":9}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":67,"column":24}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":67,"column":33}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":26},"generated":{"line":67,"column":34}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":67,"column":70}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":50},"generated":{"line":67,"column":72}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":67,"column":78}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":64},"generated":{"line":67,"column":80}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":67,"column":85}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":57,"column":2},"generated":{"line":67,"column":86}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":58,"column":1},"generated":{"line":68,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":7},"generated":{"line":70,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":13},"generated":{"line":70,"column":6}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":35},"generated":{"line":70,"column":28}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":38},"generated":{"line":70,"column":31}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":41},"generated":{"line":70,"column":50}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":42},"generated":{"line":71,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":42},"generated":{"line":71,"column":2}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":41},"generated":{"line":72,"column":0}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":38},"generated":{"line":72,"column":1}},{"source":"../../../src/ops/string/string_to_hash_bucket_fast.ts","name":null,"original":{"line":60,"column":7},"generated":{"line":72,"column":2}}],"sources":{"../../../src/ops/string/string_to_hash_bucket_fast.ts":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Converts each string in the input Tensor to its hash mod by a number of\n * buckets.\n *\n * The hash function is deterministic on the content of the string within the\n * process and will never change. However, it is not suitable for cryptography.\n * This function may be used when CPU time is scarce and inputs are trusted or\n * unimportant. There is a risk of adversaries constructing inputs that all hash\n * to the same bucket.\n *\n * ```js\n * const result = tf.string.stringToHashBucketFast(\n *   ['Hello', 'TensorFlow', '2.x'], 3);\n * result.print(); // [0, 2, 2]\n * ```\n * @param input: The strings to assign a hash bucket.\n * @param numBuckets: The number of buckets.\n * @return A Tensor of the same shape as the input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringToHashBucketFast_(\n    input: Tensor|TensorLike, numBuckets: number): Tensor {\n  const $input =\n      convertToTensor(input, 'input', 'stringToHashBucketFast', 'string');\n  const attrs: StringToHashBucketFastAttrs = {numBuckets};\n\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const inputs: StringToHashBucketFastInputs = {input: $input};\n  return ENGINE.runKernel(StringToHashBucketFast, inputs as {}, attrs as {});\n}\n\nexport const stringToHashBucketFast = op({stringToHashBucketFast_});\n"},"lineCount":null}},"error":null,"hash":"8590d4711baa659b4ede3b204cdf1cc3","cacheData":{"env":{}}}